#!/bin/sh -e

export GPG_TTY=$(tty)
file_of_dir="/tmp/jencryptdirs"
files_to_encrypt="/tmp/jencryptedgpgfiles"

while [ $# -ge 1 ]; do
	case "${1}" in
		-p|--path)
			path="$2"
			shift
			;;
		-r)
			userID="$2"
			shift
			;;
		*)
			if [ ! -z "$path" ]; then
				printf "unrecognized option $1\n"
				exit 1
			else
				path="$1"
			fi
			;;
	esac
	shift
done


encrypt_dir () {
	cd "$line"
	find . -type f -not -name "*.gpg" -maxdepth 1 > $files_to_encrypt
	if [ ! -s $files_to_encrypt ]; then
		printf " : no file to decrypt\n"
	else
		printf "\n"
	fi
	while read file
	do
		printf "		[+] $(date +%T) : encrpyting $(printf "$file" | sed 's/.\///')"
		encrypted_file="$file".gpg
		if [ "$encrypted_file" = "$file" ]; then
			printf "name file error, exiting...\n"
			exit 1
		fi
		gpg  -r $userID -o "$encrypted_file" --yes --encrypt "$file" > /dev/null 2>&1
		if [ ! -f "$encrypted_file" ]; then
			printf "can't find encrypted file, can't rm original file, exiting...\n"
			exit 1
		else
			shred "$file" -f -n 1
			rm "$file"
		fi
		printf " âœ“\n"
	done < $files_to_encrypt
}

if [ -z $path ]
then
	printf "Please specify a folder\n"
	exit 0
fi

if [ -z $userID ]
then
	userID="$USER"
	printf "no user provided, using $USER by default\n"
fi


cd $path
path=$(pwd)
printf "looking for files $path\n\n"
find $path -type d > $file_of_dir
while read line
do
	printf "	entering $line"
	cd "$line"
	encrypt_dir
done < $file_of_dir

rm $file_of_dir $files_to_encrypt -f
printf "\n"

