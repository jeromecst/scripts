#!/bin/sh -e

export GPG_TTY=$(tty)
file_init="/tmp/jdecrypt"
file_of_dir="/tmp/jdecryptdirs"
file_of_gpg_files="/tmp/jdecryptgpgfiles"

printf "" > $file_init
while [ $# -ge 1 ]; do
	case "${1}" in
		-p|--path)
			path="$2"
			shift
			;;
		-r)
			userID="$2"
			shift
			;;
		*)
			if test -f "$1" -o -d "$1"; then
				echo "$(readlink -f "$1")" >> $file_init
			else
				printf "Can't recognize $1\nExiting...\n"
				exit 1
			fi
			;;
	esac
	shift
done

decrypt_file () {
	printf "		[-] $(date +%T) : decrypting $(printf "$1" | sed 's/.\///')"
	decryptedfile=$( printf "$1" | sed 's/.gpg//g')
	if [ "$decryptedfile" = "$1" ]; then
		printf "name file error, exiting...\n"
		exit 1
	fi
	if ! eval "$decrypt_command" >/dev/null 2>&1 ; then
		exit 1
	fi
	if [ ! -f "$decryptedfile" ]; then
		printf "can't find decrypted file, can't rm original file, exiting...\n"
		exit 1
	else
		rm "$1"
	fi
	printf " âœ“\n"
}

decrypt_dir () {
	cd "$line"
	find . -type f -name "*.gpg" -maxdepth 1 > $file_of_gpg_files
	if [ ! -s $file_of_gpg_files ]; then
		printf " : no file to decrypt\n"
	else
		printf "\n"
	fi
	while read file; do
		decrypt_file "$file"
	done < $file_of_gpg_files
}

if [ ! -s "$file_init" ]; then
	printf "Please specify a folder, a file or a list of files and folders\n\n"
	printf "Example:\n"
	printf "jdecrypt file1.txt pictures/\n"
	exit 0
fi

if [ -n "$userID" ]; then
	userID="$USER"
	decrypt_command='gpg  -r $userID -o "$decryptedfile" --yes --decrypt "$1"'
else
	decrypt_command='gpg -o "$decryptedfile" --yes --decrypt "$1"'
fi

while read entry
do
	if [ -f "$entry" ]; then
		case "$entry" in
			*.gpg)
				decrypt_file "$entry"
				;;
			*)
				printf "No file to decrypt\n"
				;;
		esac
	elif [ -d "$entry" ]; then
		cd $entry
		find $entry/ -type d > $file_of_dir
		while read line; do
			printf "	entering $line"
			cd "$line"
			decrypt_dir
		done < $file_of_dir
	
		rm $file_of_dir $file_of_gpg_files -f
		printf "\n"
	else
		printf "Entry error "$entry"\n"
		exit 1
	fi
done < $file_init
